@charset "UTF-8";

ol {
  /* 일반 텍스트로 변경 */
  /* list-style-type: '글자 '; */
  list-style-type: "글자       ";
  /* 속성값에 지정되지 않는 컨텐츠를 넣어 구성할 땐
  스트링처리를 한다. 스트링처리가 된 문자열에는 스페이스(공백)이 다수인식됨.
  머릿기호와 내용을 벌리기위해 공백을 사용하는 짓은 하지말자 - 왼쪽으로 숨어버림
  

  엔티티코드 -  특수문자를 고유의 코드로 변환
  엔티티코드를 값으로 쓸때는 스트링 처리를 하지 않는다 */

  /* 스트링 처리시 따옴표 관계
  ''
  ""
  '"
  " ' ' "
  ' " " '
  단단
  쌍쌍
  단쌍쌍단 x
  쌍단단쌍 o */
}

ul {
  /* 이모지로 변경 */
  list-style-type: '🔥';
}
/* ul, ol에 padding을 조절하는 방법과
  li에서 padding또는 margin을 조정하는 방법을 사용하여 공간을 조절한다.
  li에 padding-left값을 추가하면 사이를 벌릴 수 있다. */
/* ul > li {
  padding: 0 0 0 20px;
} */

/* 가상요소를 찾아 공간 조절
: 상태선택자
:: 가상요소선택자
*/
ul > li::marker {
  /* padding: 0 20px 0 0; */
  /* margin: 0 20px 0 0; */
  font-size: 2rem;
  /* 가상요소 중 ::marker는 폰트에 관련된 모든 속성, 색상, white-space 속성만 변경 가능하다. */
}

/* ::before, ::after를 활용한 머릿기호 조절 총괄(꾸밈요소의 끝판왕)  */
ul.pseudo-element {
  list-style: none;
  margin: 0;
  padding: 20px;
  display: flex;
  flex-direction: column;
}
ul.pseudo-element li {
  position: relative;
  width: fit-content;
}
ul.pseudo-element li::before {
  content: '✨';
  /* font-size: 2rem; */
  position: absolute;
  top: 0;
  left: -25px;
  /* padding: 0 20px 0 0; */
}
ul.pseudo-element li::after {
  content: '';
  width: 12px;
  height: 12px;
  background: red;
  display: block;
  position: absolute;
  top: -7px;
  right: -12px;
}